<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.adc.sqlitedemo.repository.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.adc.sqlitedemo.repository.entity.User">
    <!--@mbg.generated-->
    <!--@Table adc_users-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_name" jdbcType="LONGVARCHAR" property="userName" />
    <result column="password" jdbcType="LONGVARCHAR" property="password" />
    <result column="name" jdbcType="LONGVARCHAR" property="name" />
    <result column="email" jdbcType="LONGVARCHAR" property="email" />
    <result column="created_at" jdbcType="LONGVARCHAR" property="createdAt" />
    <result column="created_by" jdbcType="LONGVARCHAR" property="createdBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_name, "password", "name", email, created_at, created_by
  </sql>
  <select id="selectByExample" parameterType="com.adc.sqlitedemo.repository.entity.UserExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from adc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from adc_users
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from adc_users
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.adc.sqlitedemo.repository.entity.UserExample">
    <!--@mbg.generated-->
    delete from adc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.adc.sqlitedemo.repository.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into adc_users (user_name, "password", "name", 
      email, created_at, created_by
      )
    values (#{userName,jdbcType=LONGVARCHAR}, #{password,jdbcType=LONGVARCHAR}, #{name,jdbcType=LONGVARCHAR}, 
      #{email,jdbcType=LONGVARCHAR}, #{createdAt,jdbcType=LONGVARCHAR}, #{createdBy,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.adc.sqlitedemo.repository.entity.User" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into adc_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        user_name,
      </if>
      <if test="password != null and password != ''">
        "password",
      </if>
      <if test="name != null and name != ''">
        "name",
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="createdAt != null and createdAt != ''">
        created_at,
      </if>
      <if test="createdBy != null and createdBy != ''">
        created_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        #{userName,jdbcType=LONGVARCHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null and name != ''">
        #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="createdAt != null and createdAt != ''">
        #{createdAt,jdbcType=LONGVARCHAR},
      </if>
      <if test="createdBy != null and createdBy != ''">
        #{createdBy,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.adc.sqlitedemo.repository.entity.UserExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from adc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update adc_users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.password != null">
        "password" = #{record.password,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.name != null">
        "name" = #{record.name,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update adc_users
    set id = #{record.id,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=LONGVARCHAR},
      "password" = #{record.password,jdbcType=LONGVARCHAR},
      "name" = #{record.name,jdbcType=LONGVARCHAR},
      email = #{record.email,jdbcType=LONGVARCHAR},
      created_at = #{record.createdAt,jdbcType=LONGVARCHAR},
      created_by = #{record.createdBy,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.adc.sqlitedemo.repository.entity.User">
    <!--@mbg.generated-->
    update adc_users
    <set>
      <if test="userName != null and userName != ''">
        user_name = #{userName,jdbcType=LONGVARCHAR},
      </if>
      <if test="password != null and password != ''">
        "password" = #{password,jdbcType=LONGVARCHAR},
      </if>
      <if test="name != null and name != ''">
        "name" = #{name,jdbcType=LONGVARCHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=LONGVARCHAR},
      </if>
      <if test="createdAt != null and createdAt != ''">
        created_at = #{createdAt,jdbcType=LONGVARCHAR},
      </if>
      <if test="createdBy != null and createdBy != ''">
        created_by = #{createdBy,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.adc.sqlitedemo.repository.entity.User">
    <!--@mbg.generated-->
    update adc_users
    set user_name = #{userName,jdbcType=LONGVARCHAR},
      "password" = #{password,jdbcType=LONGVARCHAR},
      "name" = #{name,jdbcType=LONGVARCHAR},
      email = #{email,jdbcType=LONGVARCHAR},
      created_at = #{createdAt,jdbcType=LONGVARCHAR},
      created_by = #{createdBy,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>